// Generated by OABuilder
package com.viaoa.docbuilder.model.oa;
 
import java.util.*;
import java.util.logging.*;
import java.sql.*;
import javax.xml.bind.annotation.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.scheduler.*;
import com.viaoa.util.*;
import com.viaoa.annotation.*;
import com.viaoa.util.OADateTime;
import com.viaoa.docbuilder.delegate.oa.*;
import com.viaoa.docbuilder.model.oa.filter.*;
import com.viaoa.docbuilder.model.oa.propertypath.*;
 
@OAClass(
    lowerName = "packageInfo",
    pluralName = "PackageInfos",
    shortName = "pci",
    displayName = "Package Info",
    displayProperty = "packageName"
)
@OATable(
    indexes = {
        @OAIndex(name = "PackageInfoPage", fkey = true, columns = { @OAIndexColumn(name = "PageId") }), 
        @OAIndex(name = "PackageInfoParentPackageInfo", fkey = true, columns = { @OAIndexColumn(name = "ParentPackageInfoId") }), 
        @OAIndex(name = "PackageInfoProjectInfo", fkey = true, columns = { @OAIndexColumn(name = "ProjectInfoId") })
    }
)
@XmlRootElement(name = "packageInfo")
@XmlType(factoryMethod = "jaxbCreate")
@XmlAccessorType(XmlAccessType.NONE)
public class PackageInfo extends OAObject {
    private static final long serialVersionUID = 1L;
    private static Logger LOG = Logger.getLogger(PackageInfo.class.getName());

    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_Created = "Created";
    public static final String P_Created = "Created";
    public static final String PROPERTY_PackageName = "PackageName";
    public static final String P_PackageName = "PackageName";
    public static final String PROPERTY_Seq = "Seq";
    public static final String P_Seq = "Seq";
     
     
    public static final String PROPERTY_ClassInfos = "ClassInfos";
    public static final String P_ClassInfos = "ClassInfos";
    public static final String PROPERTY_PackageInfos = "PackageInfos";
    public static final String P_PackageInfos = "PackageInfos";
    public static final String PROPERTY_Page = "Page";
    public static final String P_Page = "Page";
    public static final String PROPERTY_ParentPackageInfo = "ParentPackageInfo";
    public static final String P_ParentPackageInfo = "ParentPackageInfo";
    public static final String PROPERTY_ProjectInfo = "ProjectInfo";
    public static final String P_ProjectInfo = "ProjectInfo";
     
    protected volatile int id;
    protected volatile OADateTime created;
    protected volatile String packageName;
    protected volatile int seq;
     
    // Links to other objects.
    protected transient Hub<ClassInfo> hubClassInfos;
    protected transient Hub<PackageInfo> hubPackageInfos;
    protected volatile transient Page page;
    protected volatile transient PackageInfo parentPackageInfo;
    protected volatile transient ProjectInfo projectInfo;
     
    public PackageInfo() {
        if (!isLoading()) setObjectDefaults();
    }
    @Override
    public void setObjectDefaults() {
        setCreated(new OADateTime());
        getPage(); // have it autoCreated
    }
     
    public PackageInfo(int id) {
        this();
        setId(id);
    }
     

    @XmlAttribute(name="oaSingleId")
    public Integer getJaxbGuid() {
        return super.getJaxbGuid();
    }

    @OAProperty(isUnique = true, trackPrimitiveNull = false, displayLength = 6)
    @OAId()
    @XmlTransient
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    public void setId(int newValue) {
        int old = id;
        fireBeforePropertyChange(P_Id, old, newValue);
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @XmlID
    @XmlAttribute(name="id")
    public String getJaxbId() {
        // note: jaxb spec requires id to be a string
        if (!getJaxbShouldInclude(P_Id)) return null;
        return ""+id;
    }
    public void setJaxbId(String id) {
        if (getJaxbAllowPropertyChange(P_Id, this.id, id)) {
            setId((int) OAConv.convert(int.class, id));
        }
    }

    @OAProperty(defaultValue = "new OADateTime()", displayLength = 15, isProcessed = true)
    @OAColumn(sqlType = java.sql.Types.TIMESTAMP)
    public OADateTime getCreated() {
        return created;
    }
    public void setCreated(OADateTime newValue) {
        OADateTime old = created;
        fireBeforePropertyChange(P_Created, old, newValue);
        this.created = newValue;
        firePropertyChange(P_Created, old, this.created);
    }
    @XmlElement(name="created", nillable=true)
    public OADateTime getJaxbCreated() {
        if (!getJaxbShouldInclude(P_Created)) return null;
        return getCreated();
    }
    public void setJaxbCreated(OADateTime newValue) {
        if (getJaxbAllowPropertyChange(P_Created, this.created, newValue)) {
            setCreated(newValue);
        }
    }

    @OAProperty(displayName = "Package Name", maxLength = 75, displayLength = 20)
    @OAColumn(maxLength = 75)
    public String getPackageName() {
        return packageName;
    }
    public void setPackageName(String newValue) {
        String old = packageName;
        fireBeforePropertyChange(P_PackageName, old, newValue);
        this.packageName = newValue;
        firePropertyChange(P_PackageName, old, this.packageName);
    }
    @XmlElement(name="packageName", nillable=true)
    public String getJaxbPackageName() {
        if (!getJaxbShouldInclude(P_PackageName)) return null;
        return getPackageName();
    }
    public void setJaxbPackageName(String newValue) {
        if (getJaxbAllowPropertyChange(P_PackageName, this.packageName, newValue)) {
            setPackageName(newValue);
        }
    }

    @OAProperty(displayLength = 6, isAutoSeq = true)
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getSeq() {
        return seq;
    }
    public void setSeq(int newValue) {
        int old = seq;
        fireBeforePropertyChange(P_Seq, old, newValue);
        this.seq = newValue;
        firePropertyChange(P_Seq, old, this.seq);
    }
    @XmlElement(name="seq")
    public Integer getJaxbSeq() {
        if (!getJaxbShouldInclude(P_Seq)) return null;
        return getSeq();
    }
    public void setJaxbSeq(Integer newValue) {
        if (getJaxbAllowPropertyChange(P_Seq, this.seq, newValue)) {
            setSeq(newValue);
        }
    }

    @OAMany(
        displayName = "Class Infos", 
        toClass = ClassInfo.class, 
        owner = true, 
        reverseName = ClassInfo.P_PackageInfo, 
        cascadeSave = true, 
        cascadeDelete = true
    )
    @XmlTransient
    public Hub<ClassInfo> getClassInfos() {
        if (hubClassInfos == null) {
            hubClassInfos = (Hub<ClassInfo>) getHub(P_ClassInfos);
        }
        return hubClassInfos;
    }
    @XmlElementWrapper(name="classInfos")
    @XmlElement(name="classInfo", type=ClassInfo.class)
    protected List<ClassInfo> getJaxbClassInfos() {
        return getJaxbHub(P_ClassInfos);
    }
    @XmlElementWrapper(name="refClassInfos")
    @XmlElement(name="classInfo", type=ClassInfo.class)
    @XmlIDREF
    protected List<ClassInfo> getJaxbRefClassInfos() {
        return getJaxbRefHub(P_ClassInfos); 
    }
    protected void setJaxbRefClassInfos(List<ClassInfo> lst) {
        // no-op, since jaxb sends lst=hubClassInfos 
    }
     
    @OAMany(
        displayName = "Package Infos", 
        toClass = PackageInfo.class, 
        recursive = true, 
        reverseName = PackageInfo.P_ParentPackageInfo, 
        cascadeDelete = true, 
        seqProperty = PackageInfo.P_Seq, 
        sortProperty = PackageInfo.P_Seq
    )
    @XmlTransient
    public Hub<PackageInfo> getPackageInfos() {
        if (hubPackageInfos == null) {
            hubPackageInfos = (Hub<PackageInfo>) getHub(P_PackageInfos);
        }
        return hubPackageInfos;
    }
    @XmlElementWrapper(name="packageInfos")
    @XmlElement(name="packageInfo", type=PackageInfo.class)
    protected List<PackageInfo> getJaxbPackageInfos() {
        return getJaxbHub(P_PackageInfos);
    }
    @XmlElementWrapper(name="refPackageInfos")
    @XmlElement(name="packageInfo", type=PackageInfo.class)
    @XmlIDREF
    protected List<PackageInfo> getJaxbRefPackageInfos() {
        return getJaxbRefHub(P_PackageInfos); 
    }
    protected void setJaxbRefPackageInfos(List<PackageInfo> lst) {
        // no-op, since jaxb sends lst=hubPackageInfos 
    }
     
    @OAOne(
        reverseName = Page.P_PackageInfo, 
        autoCreateNew = true, 
        allowAddExisting = false
    )
    @OAFkey(columns = {"PageId"})
    @XmlTransient
    public Page getPage() {
        if (page == null) {
            page = (Page) getObject(P_Page);
        }
        return page;
    }
    public void setPage(Page newValue) {
        Page old = this.page;
        fireBeforePropertyChange(P_Page, old, newValue);
        this.page = newValue;
        firePropertyChange(P_Page, old, this.page);
    }
    @XmlElement(name="page")
    public Page getJaxbPage() {
        Object obj = super.getJaxbObject(P_Page);
        return (Page) obj;
    }
    public void setJaxbPage(Page newValue) {
        if (getJaxbAllowPropertyChange(P_Page, this.page, newValue)) {
            setPage(newValue);
        }
    }
    @XmlElement(name="refPage")
    @XmlIDREF
    public Page getJaxbRefPage() {
        Object obj = super.getJaxbRefObject(P_Page);
        return (Page) obj;
    }
    public void setJaxbRefPage(Page newValue) {
        setJaxbPage(newValue);
    }
    @XmlElement(name="pageId", nillable=true)
    public String getJaxbPageId() {
        String s = super.getJaxbId(P_Page);
        return s;
    }
    public void setJaxbPageId(String id) {
        setJaxbId(P_Page, id);
    }
     
    @OAOne(
        displayName = "Parent Package Info", 
        reverseName = PackageInfo.P_PackageInfos, 
        allowCreateNew = false
    )
    @OAFkey(columns = {"ParentPackageInfoId"})
    @XmlTransient
    public PackageInfo getParentPackageInfo() {
        if (parentPackageInfo == null) {
            parentPackageInfo = (PackageInfo) getObject(P_ParentPackageInfo);
        }
        return parentPackageInfo;
    }
    public void setParentPackageInfo(PackageInfo newValue) {
        PackageInfo old = this.parentPackageInfo;
        fireBeforePropertyChange(P_ParentPackageInfo, old, newValue);
        this.parentPackageInfo = newValue;
        firePropertyChange(P_ParentPackageInfo, old, this.parentPackageInfo);
    }
    @XmlElement(name="parentPackageInfo")
    public PackageInfo getJaxbParentPackageInfo() {
        Object obj = super.getJaxbObject(P_ParentPackageInfo);
        return (PackageInfo) obj;
    }
    public void setJaxbParentPackageInfo(PackageInfo newValue) {
        if (getJaxbAllowPropertyChange(P_ParentPackageInfo, this.parentPackageInfo, newValue)) {
            setParentPackageInfo(newValue);
        }
    }
    @XmlElement(name="refParentPackageInfo")
    @XmlIDREF
    public PackageInfo getJaxbRefParentPackageInfo() {
        Object obj = super.getJaxbRefObject(P_ParentPackageInfo);
        return (PackageInfo) obj;
    }
    public void setJaxbRefParentPackageInfo(PackageInfo newValue) {
        setJaxbParentPackageInfo(newValue);
    }
    @XmlElement(name="parentPackageInfoId", nillable=true)
    public String getJaxbParentPackageInfoId() {
        String s = super.getJaxbId(P_ParentPackageInfo);
        return s;
    }
    public void setJaxbParentPackageInfoId(String id) {
        setJaxbId(P_ParentPackageInfo, id);
    }
     
    @OAOne(
        displayName = "Project Info", 
        reverseName = ProjectInfo.P_PackageInfos, 
        required = true, 
        allowCreateNew = false
    )
    @OAFkey(columns = {"ProjectInfoId"})
    @XmlTransient
    public ProjectInfo getProjectInfo() {
        if (projectInfo == null) {
            projectInfo = (ProjectInfo) getObject(P_ProjectInfo);
        }
        return projectInfo;
    }
    public void setProjectInfo(ProjectInfo newValue) {
        ProjectInfo old = this.projectInfo;
        fireBeforePropertyChange(P_ProjectInfo, old, newValue);
        this.projectInfo = newValue;
        firePropertyChange(P_ProjectInfo, old, this.projectInfo);
    }
    @XmlElement(name="projectInfo", required=true)
    public ProjectInfo getJaxbProjectInfo() {
        Object obj = super.getJaxbObject(P_ProjectInfo);
        return (ProjectInfo) obj;
    }
    public void setJaxbProjectInfo(ProjectInfo newValue) {
        if (getJaxbAllowPropertyChange(P_ProjectInfo, this.projectInfo, newValue)) {
            setProjectInfo(newValue);
        }
    }
    @XmlElement(name="refProjectInfo")
    @XmlIDREF
    public ProjectInfo getJaxbRefProjectInfo() {
        Object obj = super.getJaxbRefObject(P_ProjectInfo);
        return (ProjectInfo) obj;
    }
    public void setJaxbRefProjectInfo(ProjectInfo newValue) {
        setJaxbProjectInfo(newValue);
    }
    @XmlElement(name="projectInfoId", required=true)
    public String getJaxbProjectInfoId() {
        String s = super.getJaxbId(P_ProjectInfo);
        return s;
    }
    public void setJaxbProjectInfoId(String id) {
        setJaxbId(P_ProjectInfo, id);
    }
     
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        java.sql.Timestamp timestamp;
        timestamp = rs.getTimestamp(2);
        if (timestamp != null) this.created = new OADateTime(timestamp);
        this.packageName = rs.getString(3);
        this.seq = (int) rs.getInt(4);
        if (rs.wasNull()) {
            OAObjectInfoDelegate.setPrimitiveNull(this, PackageInfo.P_Seq, true);
        }
        int pageFkey = rs.getInt(5);
        if (!rs.wasNull() && pageFkey > 0) {
            setProperty(P_Page, new OAObjectKey(pageFkey));
        }
        int parentPackageInfoFkey = rs.getInt(6);
        if (!rs.wasNull() && parentPackageInfoFkey > 0) {
            setProperty(P_ParentPackageInfo, new OAObjectKey(parentPackageInfoFkey));
        }
        int projectInfoFkey = rs.getInt(7);
        if (!rs.wasNull() && projectInfoFkey > 0) {
            setProperty(P_ProjectInfo, new OAObjectKey(projectInfoFkey));
        }
        if (rs.getMetaData().getColumnCount() != 7) {
            throw new SQLException("invalid number of columns for load method");
        }

        this.changedFlag = false;
        this.newFlag = false;
    }
    public static PackageInfo jaxbCreate() {
        PackageInfo packageInfo = (PackageInfo) OAObject.jaxbCreateInstance(PackageInfo.class);
        if (packageInfo == null) packageInfo = new PackageInfo();
        return packageInfo;
    }
}
 
