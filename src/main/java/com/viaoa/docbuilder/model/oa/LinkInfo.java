// Generated by OABuilder
package com.viaoa.docbuilder.model.oa;
 
import java.util.*;
import java.util.logging.*;
import java.sql.*;
import javax.xml.bind.annotation.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.scheduler.*;
import com.viaoa.util.*;
import com.viaoa.annotation.*;
import com.viaoa.util.OADateTime;
import com.viaoa.docbuilder.delegate.oa.*;
import com.viaoa.docbuilder.model.oa.filter.*;
import com.viaoa.docbuilder.model.oa.propertypath.*;
 
@OAClass(
    lowerName = "linkInfo",
    pluralName = "LinkInfos",
    shortName = "lni",
    displayName = "Link Info",
    displayProperty = "id"
)
@OATable(
    indexes = {
        @OAIndex(name = "LinkInfoPage", fkey = true, columns = { @OAIndexColumn(name = "PageId") })
    }
)
@XmlRootElement(name = "linkInfo")
@XmlType(factoryMethod = "jaxbCreate")
@XmlAccessorType(XmlAccessType.NONE)
public class LinkInfo extends OAObject {
    private static final long serialVersionUID = 1L;
    private static Logger LOG = Logger.getLogger(LinkInfo.class.getName());

    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_Created = "Created";
    public static final String P_Created = "Created";
    public static final String PROPERTY_Name = "Name";
    public static final String P_Name = "Name";
    public static final String PROPERTY_Description = "Description";
    public static final String P_Description = "Description";
    public static final String PROPERTY_Link = "Link";
    public static final String P_Link = "Link";
     
     
    public static final String PROPERTY_Page = "Page";
    public static final String P_Page = "Page";
     
    protected volatile int id;
    protected volatile OADateTime created;
    protected volatile String name;
    protected volatile String description;
    protected volatile String link;
     
    // Links to other objects.
    protected volatile transient Page page;
     
    public LinkInfo() {
        if (!isLoading()) setObjectDefaults();
    }
    @Override
    public void setObjectDefaults() {
        setCreated(new OADateTime());
    }
     
    public LinkInfo(int id) {
        this();
        setId(id);
    }
     

    @XmlAttribute(name="oaSingleId")
    public Integer getJaxbGuid() {
        return super.getJaxbGuid();
    }

    @OAProperty(isUnique = true, trackPrimitiveNull = false, displayLength = 6)
    @OAId()
    @XmlTransient
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    public void setId(int newValue) {
        int old = id;
        fireBeforePropertyChange(P_Id, old, newValue);
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @XmlID
    @XmlAttribute(name="id")
    public String getJaxbId() {
        // note: jaxb spec requires id to be a string
        if (!getJaxbShouldInclude(P_Id)) return null;
        return ""+id;
    }
    public void setJaxbId(String id) {
        if (getJaxbAllowPropertyChange(P_Id, this.id, id)) {
            setId((int) OAConv.convert(int.class, id));
        }
    }

    @OAProperty(defaultValue = "new OADateTime()", displayLength = 15, isProcessed = true)
    @OAColumn(sqlType = java.sql.Types.TIMESTAMP)
    public OADateTime getCreated() {
        return created;
    }
    public void setCreated(OADateTime newValue) {
        OADateTime old = created;
        fireBeforePropertyChange(P_Created, old, newValue);
        this.created = newValue;
        firePropertyChange(P_Created, old, this.created);
    }
    @XmlElement(name="created", nillable=true)
    public OADateTime getJaxbCreated() {
        if (!getJaxbShouldInclude(P_Created)) return null;
        return getCreated();
    }
    public void setJaxbCreated(OADateTime newValue) {
        if (getJaxbAllowPropertyChange(P_Created, this.created, newValue)) {
            setCreated(newValue);
        }
    }

    @OAProperty(maxLength = 35, displayLength = 20)
    @OAColumn(maxLength = 35)
    public String getName() {
        return name;
    }
    public void setName(String newValue) {
        String old = name;
        fireBeforePropertyChange(P_Name, old, newValue);
        this.name = newValue;
        firePropertyChange(P_Name, old, this.name);
    }
    @XmlElement(name="name", nillable=true)
    public String getJaxbName() {
        if (!getJaxbShouldInclude(P_Name)) return null;
        return getName();
    }
    public void setJaxbName(String newValue) {
        if (getJaxbAllowPropertyChange(P_Name, this.name, newValue)) {
            setName(newValue);
        }
    }

    @OAProperty(maxLength = 175, displayLength = 30, columnLength = 20)
    @OAColumn(maxLength = 175)
    public String getDescription() {
        return description;
    }
    public void setDescription(String newValue) {
        String old = description;
        fireBeforePropertyChange(P_Description, old, newValue);
        this.description = newValue;
        firePropertyChange(P_Description, old, this.description);
    }
    @XmlElement(name="description", nillable=true)
    public String getJaxbDescription() {
        if (!getJaxbShouldInclude(P_Description)) return null;
        return getDescription();
    }
    public void setJaxbDescription(String newValue) {
        if (getJaxbAllowPropertyChange(P_Description, this.description, newValue)) {
            setDescription(newValue);
        }
    }

    @OAProperty(maxLength = 125, displayLength = 32, columnLength = 20, isUrl = true)
    @OAColumn(maxLength = 125)
    public String getLink() {
        return link;
    }
    public void setLink(String newValue) {
        String old = link;
        fireBeforePropertyChange(P_Link, old, newValue);
        this.link = newValue;
        firePropertyChange(P_Link, old, this.link);
    }
    @XmlElement(name="link", nillable=true)
    public String getJaxbLink() {
        if (!getJaxbShouldInclude(P_Link)) return null;
        return getLink();
    }
    public void setJaxbLink(String newValue) {
        if (getJaxbAllowPropertyChange(P_Link, this.link, newValue)) {
            setLink(newValue);
        }
    }

    @OAOne(
        reverseName = Page.P_LinkInfos
    )
    @OAFkey(columns = {"PageId"})
    @XmlTransient
    public Page getPage() {
        if (page == null) {
            page = (Page) getObject(P_Page);
        }
        return page;
    }
    public void setPage(Page newValue) {
        Page old = this.page;
        fireBeforePropertyChange(P_Page, old, newValue);
        this.page = newValue;
        firePropertyChange(P_Page, old, this.page);
    }
    @XmlElement(name="page")
    public Page getJaxbPage() {
        Object obj = super.getJaxbObject(P_Page);
        return (Page) obj;
    }
    public void setJaxbPage(Page newValue) {
        if (getJaxbAllowPropertyChange(P_Page, this.page, newValue)) {
            setPage(newValue);
        }
    }
    @XmlElement(name="refPage")
    @XmlIDREF
    public Page getJaxbRefPage() {
        Object obj = super.getJaxbRefObject(P_Page);
        return (Page) obj;
    }
    public void setJaxbRefPage(Page newValue) {
        setJaxbPage(newValue);
    }
    @XmlElement(name="pageId", nillable=true)
    public String getJaxbPageId() {
        String s = super.getJaxbId(P_Page);
        return s;
    }
    public void setJaxbPageId(String id) {
        setJaxbId(P_Page, id);
    }
     
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        java.sql.Timestamp timestamp;
        timestamp = rs.getTimestamp(2);
        if (timestamp != null) this.created = new OADateTime(timestamp);
        this.name = rs.getString(3);
        this.description = rs.getString(4);
        this.link = rs.getString(5);
        int pageFkey = rs.getInt(6);
        if (!rs.wasNull() && pageFkey > 0) {
            setProperty(P_Page, new OAObjectKey(pageFkey));
        }
        if (rs.getMetaData().getColumnCount() != 6) {
            throw new SQLException("invalid number of columns for load method");
        }

        this.changedFlag = false;
        this.newFlag = false;
    }
    public static LinkInfo jaxbCreate() {
        LinkInfo linkInfo = (LinkInfo) OAObject.jaxbCreateInstance(LinkInfo.class);
        if (linkInfo == null) linkInfo = new LinkInfo();
        return linkInfo;
    }
}
 
