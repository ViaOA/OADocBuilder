// Generated by OABuilder
package com.viaoa.docbuilder.model.oa;
 
import java.util.*;
import java.util.logging.*;
import java.sql.*;
import javax.xml.bind.annotation.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.scheduler.*;
import com.viaoa.util.*;
import com.viaoa.annotation.*;
import com.viaoa.util.OADateTime;
import com.viaoa.docbuilder.delegate.oa.*;
import com.viaoa.docbuilder.model.oa.filter.*;
import com.viaoa.docbuilder.model.oa.propertypath.*;
 
@OAClass(
    lowerName = "tutorial",
    pluralName = "Tutorials",
    shortName = "ttr",
    displayName = "Tutorial",
    isLookup = true,
    isPreSelect = true,
    displayProperty = "name"
)
@OATable(
)
@XmlRootElement(name = "tutorial")
@XmlType(factoryMethod = "jaxbCreate")
@XmlAccessorType(XmlAccessType.NONE)
public class Tutorial extends OAObject {
    private static final long serialVersionUID = 1L;
    private static Logger LOG = Logger.getLogger(Tutorial.class.getName());

    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_Created = "Created";
    public static final String P_Created = "Created";
    public static final String PROPERTY_Name = "Name";
    public static final String P_Name = "Name";
     
     
    public static final String PROPERTY_Sections = "Sections";
    public static final String P_Sections = "Sections";
     
    protected volatile int id;
    protected volatile OADateTime created;
    protected volatile String name;
     
    // Links to other objects.
    protected transient Hub<Section> hubSections;
     
    public Tutorial() {
        if (!isLoading()) setObjectDefaults();
    }
    @Override
    public void setObjectDefaults() {
        setCreated(new OADateTime());
    }
     
    public Tutorial(int id) {
        this();
        setId(id);
    }
     

    @XmlAttribute(name="oaSingleId")
    public Integer getJaxbGuid() {
        return super.getJaxbGuid();
    }

    @OAProperty(isUnique = true, trackPrimitiveNull = false, displayLength = 6)
    @OAId()
    @XmlTransient
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    public void setId(int newValue) {
        int old = id;
        fireBeforePropertyChange(P_Id, old, newValue);
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @XmlID
    @XmlAttribute(name="id")
    public String getJaxbId() {
        // note: jaxb spec requires id to be a string
        if (!getJaxbShouldInclude(P_Id)) return null;
        return ""+id;
    }
    public void setJaxbId(String id) {
        if (getJaxbAllowPropertyChange(P_Id, this.id, id)) {
            setId((int) OAConv.convert(int.class, id));
        }
    }

    @OAProperty(defaultValue = "new OADateTime()", displayLength = 15, isProcessed = true)
    @OAColumn(sqlType = java.sql.Types.TIMESTAMP)
    public OADateTime getCreated() {
        return created;
    }
    public void setCreated(OADateTime newValue) {
        OADateTime old = created;
        fireBeforePropertyChange(P_Created, old, newValue);
        this.created = newValue;
        firePropertyChange(P_Created, old, this.created);
    }
    @XmlElement(name="created", nillable=true)
    public OADateTime getJaxbCreated() {
        if (!getJaxbShouldInclude(P_Created)) return null;
        return getCreated();
    }
    public void setJaxbCreated(OADateTime newValue) {
        if (getJaxbAllowPropertyChange(P_Created, this.created, newValue)) {
            setCreated(newValue);
        }
    }

    @OAProperty(maxLength = 35, displayLength = 20)
    @OAColumn(maxLength = 35)
    public String getName() {
        return name;
    }
    public void setName(String newValue) {
        String old = name;
        fireBeforePropertyChange(P_Name, old, newValue);
        this.name = newValue;
        firePropertyChange(P_Name, old, this.name);
    }
    @XmlElement(name="name", nillable=true)
    public String getJaxbName() {
        if (!getJaxbShouldInclude(P_Name)) return null;
        return getName();
    }
    public void setJaxbName(String newValue) {
        if (getJaxbAllowPropertyChange(P_Name, this.name, newValue)) {
            setName(newValue);
        }
    }

    @OAMany(
        toClass = Section.class, 
        recursive = true, 
        owner = true, 
        reverseName = Section.P_Tutorial, 
        cascadeSave = true, 
        cascadeDelete = true, 
        seqProperty = Section.P_Seq, 
        sortProperty = Section.P_Seq
    )
    @XmlTransient
    public Hub<Section> getSections() {
        if (hubSections == null) {
            hubSections = (Hub<Section>) getHub(P_Sections);
        }
        return hubSections;
    }
    @XmlElementWrapper(name="sections")
    @XmlElement(name="section", type=Section.class)
    protected List<Section> getJaxbSections() {
        return getJaxbHub(P_Sections);
    }
    @XmlElementWrapper(name="refSections")
    @XmlElement(name="section", type=Section.class)
    @XmlIDREF
    protected List<Section> getJaxbRefSections() {
        return getJaxbRefHub(P_Sections); 
    }
    protected void setJaxbRefSections(List<Section> lst) {
        // no-op, since jaxb sends lst=hubSections 
    }
     
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        java.sql.Timestamp timestamp;
        timestamp = rs.getTimestamp(2);
        if (timestamp != null) this.created = new OADateTime(timestamp);
        this.name = rs.getString(3);
        if (rs.getMetaData().getColumnCount() != 3) {
            throw new SQLException("invalid number of columns for load method");
        }

        this.changedFlag = false;
        this.newFlag = false;
    }
    public static Tutorial jaxbCreate() {
        Tutorial tutorial = (Tutorial) OAObject.jaxbCreateInstance(Tutorial.class);
        if (tutorial == null) tutorial = new Tutorial();
        return tutorial;
    }
}
 
