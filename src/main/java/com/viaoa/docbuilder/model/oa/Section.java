// Generated by OABuilder
package com.viaoa.docbuilder.model.oa;
 
import java.util.*;
import java.util.logging.*;
import java.sql.*;
import javax.xml.bind.annotation.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.scheduler.*;
import com.viaoa.util.*;
import com.viaoa.annotation.*;
import com.viaoa.util.OADateTime;
import com.viaoa.docbuilder.delegate.oa.*;
import com.viaoa.docbuilder.model.oa.filter.*;
import com.viaoa.docbuilder.model.oa.propertypath.*;
 
@OAClass(
    lowerName = "section",
    pluralName = "Sections",
    shortName = "sct",
    displayName = "Section",
    displayProperty = "name"
)
@OATable(
    indexes = {
        @OAIndex(name = "SectionParentSection", fkey = true, columns = { @OAIndexColumn(name = "ParentSectionId") }), 
        @OAIndex(name = "SectionTutorial", fkey = true, columns = { @OAIndexColumn(name = "TutorialId") })
    }
)
@XmlRootElement(name = "section")
@XmlType(factoryMethod = "jaxbCreate")
@XmlAccessorType(XmlAccessType.NONE)
public class Section extends OAObject {
    private static final long serialVersionUID = 1L;
    private static Logger LOG = Logger.getLogger(Section.class.getName());

    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_Created = "Created";
    public static final String P_Created = "Created";
    public static final String PROPERTY_Seq = "Seq";
    public static final String P_Seq = "Seq";
    public static final String PROPERTY_Name = "Name";
    public static final String P_Name = "Name";
     
     
    public static final String PROPERTY_Page = "Page";
    public static final String P_Page = "Page";
    public static final String PROPERTY_ParentSection = "ParentSection";
    public static final String P_ParentSection = "ParentSection";
    public static final String PROPERTY_Sections = "Sections";
    public static final String P_Sections = "Sections";
    public static final String PROPERTY_Tutorial = "Tutorial";
    public static final String P_Tutorial = "Tutorial";
     
    protected volatile int id;
    protected volatile OADateTime created;
    protected volatile int seq;
    protected volatile String name;
     
    // Links to other objects.
    protected volatile transient Page page;
    protected volatile transient Section parentSection;
    protected transient Hub<Section> hubSections;
    protected volatile transient Tutorial tutorial;
     
    public Section() {
        if (!isLoading()) setObjectDefaults();
    }
    @Override
    public void setObjectDefaults() {
        setCreated(new OADateTime());
        getPage(); // have it autoCreated
    }
     
    public Section(int id) {
        this();
        setId(id);
    }
     

    @XmlAttribute(name="oaSingleId")
    public Integer getJaxbGuid() {
        return super.getJaxbGuid();
    }

    @OAProperty(isUnique = true, trackPrimitiveNull = false, displayLength = 6)
    @OAId()
    @XmlTransient
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    public void setId(int newValue) {
        int old = id;
        fireBeforePropertyChange(P_Id, old, newValue);
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @XmlID
    @XmlAttribute(name="id")
    public String getJaxbId() {
        // note: jaxb spec requires id to be a string
        if (!getJaxbShouldInclude(P_Id)) return null;
        return ""+id;
    }
    public void setJaxbId(String id) {
        if (getJaxbAllowPropertyChange(P_Id, this.id, id)) {
            setId((int) OAConv.convert(int.class, id));
        }
    }

    @OAProperty(defaultValue = "new OADateTime()", displayLength = 15, isProcessed = true)
    @OAColumn(sqlType = java.sql.Types.TIMESTAMP)
    public OADateTime getCreated() {
        return created;
    }
    public void setCreated(OADateTime newValue) {
        OADateTime old = created;
        fireBeforePropertyChange(P_Created, old, newValue);
        this.created = newValue;
        firePropertyChange(P_Created, old, this.created);
    }
    @XmlElement(name="created", nillable=true)
    public OADateTime getJaxbCreated() {
        if (!getJaxbShouldInclude(P_Created)) return null;
        return getCreated();
    }
    public void setJaxbCreated(OADateTime newValue) {
        if (getJaxbAllowPropertyChange(P_Created, this.created, newValue)) {
            setCreated(newValue);
        }
    }

    @OAProperty(displayLength = 6, isAutoSeq = true)
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getSeq() {
        return seq;
    }
    public void setSeq(int newValue) {
        int old = seq;
        fireBeforePropertyChange(P_Seq, old, newValue);
        this.seq = newValue;
        firePropertyChange(P_Seq, old, this.seq);
    }
    @XmlElement(name="seq")
    public Integer getJaxbSeq() {
        if (!getJaxbShouldInclude(P_Seq)) return null;
        return getSeq();
    }
    public void setJaxbSeq(Integer newValue) {
        if (getJaxbAllowPropertyChange(P_Seq, this.seq, newValue)) {
            setSeq(newValue);
        }
    }

    @OAProperty(maxLength = 35, displayLength = 20)
    @OAColumn(maxLength = 35)
    public String getName() {
        return name;
    }
    public void setName(String newValue) {
        String old = name;
        fireBeforePropertyChange(P_Name, old, newValue);
        this.name = newValue;
        firePropertyChange(P_Name, old, this.name);
    }
    @XmlElement(name="name", nillable=true)
    public String getJaxbName() {
        if (!getJaxbShouldInclude(P_Name)) return null;
        return getName();
    }
    public void setJaxbName(String newValue) {
        if (getJaxbAllowPropertyChange(P_Name, this.name, newValue)) {
            setName(newValue);
        }
    }

    @OAOne(
        reverseName = Page.P_Section, 
        autoCreateNew = true, 
        allowAddExisting = false
    )
    @XmlTransient
    public Page getPage() {
        if (page == null) {
            page = (Page) getObject(P_Page);
        }
        return page;
    }
    public void setPage(Page newValue) {
        Page old = this.page;
        fireBeforePropertyChange(P_Page, old, newValue);
        this.page = newValue;
        firePropertyChange(P_Page, old, this.page);
    }
    @XmlElement(name="page")
    public Page getJaxbPage() {
        Object obj = super.getJaxbObject(P_Page);
        return (Page) obj;
    }
    public void setJaxbPage(Page newValue) {
        if (getJaxbAllowPropertyChange(P_Page, this.page, newValue)) {
            setPage(newValue);
        }
    }
    @XmlElement(name="refPage")
    @XmlIDREF
    public Page getJaxbRefPage() {
        Object obj = super.getJaxbRefObject(P_Page);
        return (Page) obj;
    }
    public void setJaxbRefPage(Page newValue) {
        setJaxbPage(newValue);
    }
    @XmlElement(name="pageId", nillable=true)
    public String getJaxbPageId() {
        String s = super.getJaxbId(P_Page);
        return s;
    }
    public void setJaxbPageId(String id) {
        setJaxbId(P_Page, id);
    }
     
    @OAOne(
        displayName = "Parent Section", 
        reverseName = Section.P_Sections, 
        allowCreateNew = false, 
        allowAddExisting = false
    )
    @OAFkey(columns = {"ParentSectionId"})
    @XmlTransient
    public Section getParentSection() {
        if (parentSection == null) {
            parentSection = (Section) getObject(P_ParentSection);
        }
        return parentSection;
    }
    public void setParentSection(Section newValue) {
        Section old = this.parentSection;
        fireBeforePropertyChange(P_ParentSection, old, newValue);
        this.parentSection = newValue;
        firePropertyChange(P_ParentSection, old, this.parentSection);
    }
    @XmlElement(name="parentSection")
    public Section getJaxbParentSection() {
        Object obj = super.getJaxbObject(P_ParentSection);
        return (Section) obj;
    }
    public void setJaxbParentSection(Section newValue) {
        if (getJaxbAllowPropertyChange(P_ParentSection, this.parentSection, newValue)) {
            setParentSection(newValue);
        }
    }
    @XmlElement(name="refParentSection")
    @XmlIDREF
    public Section getJaxbRefParentSection() {
        Object obj = super.getJaxbRefObject(P_ParentSection);
        return (Section) obj;
    }
    public void setJaxbRefParentSection(Section newValue) {
        setJaxbParentSection(newValue);
    }
    @XmlElement(name="parentSectionId", nillable=true)
    public String getJaxbParentSectionId() {
        String s = super.getJaxbId(P_ParentSection);
        return s;
    }
    public void setJaxbParentSectionId(String id) {
        setJaxbId(P_ParentSection, id);
    }
     
    @OAMany(
        toClass = Section.class, 
        recursive = true, 
        reverseName = Section.P_ParentSection, 
        seqProperty = Section.P_Seq, 
        sortProperty = Section.P_Seq
    )
    @XmlTransient
    public Hub<Section> getSections() {
        if (hubSections == null) {
            hubSections = (Hub<Section>) getHub(P_Sections);
        }
        return hubSections;
    }
    @XmlElementWrapper(name="sections")
    @XmlElement(name="section", type=Section.class)
    protected List<Section> getJaxbSections() {
        return getJaxbHub(P_Sections);
    }
    @XmlElementWrapper(name="refSections")
    @XmlElement(name="section", type=Section.class)
    @XmlIDREF
    protected List<Section> getJaxbRefSections() {
        return getJaxbRefHub(P_Sections); 
    }
    protected void setJaxbRefSections(List<Section> lst) {
        // no-op, since jaxb sends lst=hubSections 
    }
     
    @OAOne(
        reverseName = Tutorial.P_Sections, 
        required = true, 
        allowCreateNew = false
    )
    @OAFkey(columns = {"TutorialId"})
    @XmlTransient
    public Tutorial getTutorial() {
        if (tutorial == null) {
            tutorial = (Tutorial) getObject(P_Tutorial);
        }
        return tutorial;
    }
    public void setTutorial(Tutorial newValue) {
        Tutorial old = this.tutorial;
        fireBeforePropertyChange(P_Tutorial, old, newValue);
        this.tutorial = newValue;
        firePropertyChange(P_Tutorial, old, this.tutorial);
    }
    @XmlElement(name="tutorial", required=true)
    public Tutorial getJaxbTutorial() {
        Object obj = super.getJaxbObject(P_Tutorial);
        return (Tutorial) obj;
    }
    public void setJaxbTutorial(Tutorial newValue) {
        if (getJaxbAllowPropertyChange(P_Tutorial, this.tutorial, newValue)) {
            setTutorial(newValue);
        }
    }
    @XmlElement(name="refTutorial")
    @XmlIDREF
    public Tutorial getJaxbRefTutorial() {
        Object obj = super.getJaxbRefObject(P_Tutorial);
        return (Tutorial) obj;
    }
    public void setJaxbRefTutorial(Tutorial newValue) {
        setJaxbTutorial(newValue);
    }
    @XmlElement(name="tutorialId", required=true)
    public String getJaxbTutorialId() {
        String s = super.getJaxbId(P_Tutorial);
        return s;
    }
    public void setJaxbTutorialId(String id) {
        setJaxbId(P_Tutorial, id);
    }
     
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        java.sql.Timestamp timestamp;
        timestamp = rs.getTimestamp(2);
        if (timestamp != null) this.created = new OADateTime(timestamp);
        this.seq = (int) rs.getInt(3);
        if (rs.wasNull()) {
            OAObjectInfoDelegate.setPrimitiveNull(this, Section.P_Seq, true);
        }
        this.name = rs.getString(4);
        int parentSectionFkey = rs.getInt(5);
        if (!rs.wasNull() && parentSectionFkey > 0) {
            setProperty(P_ParentSection, new OAObjectKey(parentSectionFkey));
        }
        int tutorialFkey = rs.getInt(6);
        if (!rs.wasNull() && tutorialFkey > 0) {
            setProperty(P_Tutorial, new OAObjectKey(tutorialFkey));
        }
        if (rs.getMetaData().getColumnCount() != 6) {
            throw new SQLException("invalid number of columns for load method");
        }

        this.changedFlag = false;
        this.newFlag = false;
    }
    public static Section jaxbCreate() {
        Section section = (Section) OAObject.jaxbCreateInstance(Section.class);
        if (section == null) section = new Section();
        return section;
    }
}
 
