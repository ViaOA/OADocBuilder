// Generated by OABuilder

package com.viaoa.docbuilder.model;

import java.util.logging.*;
import com.viaoa.object.*;
import com.viaoa.annotation.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.filter.*;
import com.viaoa.datasource.*;

import com.viaoa.docbuilder.model.oa.*;
import com.viaoa.docbuilder.model.oa.propertypath.*;
import com.viaoa.docbuilder.model.oa.search.*;
import com.viaoa.docbuilder.model.oa.filter.*;
import com.viaoa.docbuilder.model.search.*;
import com.viaoa.docbuilder.model.filter.*;
import com.viaoa.docbuilder.delegate.ModelDelegate;
import com.viaoa.docbuilder.resource.Resource;

public class TutorialModel extends OAObjectModel {
    private static Logger LOG = Logger.getLogger(TutorialModel.class.getName());
    
    // Hubs
    protected Hub<Tutorial> hub;
    // selected tutorials
    protected Hub<Tutorial> hubMultiSelect;
    // detail hubs
    protected Hub<Section> hubSections;
    
    // ObjectModels
    protected SectionModel modelSections;
    
    public TutorialModel() {
        setDisplayName("Tutorial");
        setPluralDisplayName("Tutorials");
    }
    
    public TutorialModel(Hub<Tutorial> hubTutorial) {
        this();
        if (hubTutorial != null) HubDelegate.setObjectClass(hubTutorial, Tutorial.class);
        this.hub = hubTutorial;
    }
    public TutorialModel(Tutorial tutorial) {
        this();
        getHub().add(tutorial);
        getHub().setPos(0);
    }
    
    public Hub<Tutorial> getOriginalHub() {
        return getHub();
    }
    
    public Hub<Section> getSections() {
        if (hubSections == null) {
            hubSections = getHub().getDetailHub(Tutorial.P_Sections);
        }
        return hubSections;
    }
    public Tutorial getTutorial() {
        return getHub().getAO();
    }
    
    public Hub<Tutorial> getHub() {
        if (hub == null) {
            hub = new Hub<Tutorial>(Tutorial.class);
        }
        return hub;
    }
    
    public Hub<Tutorial> getMultiSelectHub() {
        if (hubMultiSelect == null) {
            hubMultiSelect = new Hub<Tutorial>(Tutorial.class);
        }
        return hubMultiSelect;
    }
    
    public SectionModel getSectionsModel() {
        if (modelSections != null) return modelSections;
        modelSections = new SectionModel(getSections());
        modelSections.setDisplayName("Section");
        modelSections.setPluralDisplayName("Sections");
        if (HubDetailDelegate.getIsFromSameMasterHub(getOriginalHub(), getSections())) {
            modelSections.setCreateUI(false);
        }
        modelSections.setForJfc(getForJfc());
        modelSections.setAllowNew(true);
        modelSections.setAllowSave(true);
        modelSections.setAllowAdd(false);
        modelSections.setAllowMove(true);
        modelSections.setAllowRemove(false);
        modelSections.setAllowDelete(true);
        modelSections.setAllowSearch(false);
        modelSections.setAllowHubSearch(false);
        modelSections.setAllowGotoEdit(true);
        modelSections.setViewOnly(getViewOnly());
        modelSections.setAllowNew(true);
        modelSections.setAllowTableFilter(false);
        modelSections.setAllowTableSorting(false);
        modelSections.setAllowRecursive(true);
        modelSections.setAllowMultiSelect(false);
        modelSections.setAllowCopy(false);
        modelSections.setAllowCut(false);
        modelSections.setAllowPaste(false);
        // call Tutorial.sectionsModelCallback(SectionModel) to be able to customize this model
        OAObjectCallbackDelegate.onObjectCallbackModel(Tutorial.class, Tutorial.P_Sections, modelSections);
    
        return modelSections;
    }
    
    public HubCopy<Tutorial> createHubCopy() {
        Hub<Tutorial> hubTutorialx = new Hub<>(Tutorial.class);
        HubCopy<Tutorial> hc = new HubCopy<>(getHub(), hubTutorialx, true);
        return hc;
    }
    public TutorialModel createCopy() {
        TutorialModel mod = new TutorialModel(createHubCopy().getHub());
        return mod;
    }
}

