// Generated by OABuilder 
package com.viaoa.docbuilder.view.client.panel.rootProjects;

import java.awt.*;
import java.awt.event.*;
import java.util.logging.*;
import javax.swing.*;
import com.viaoa.docbuilder.delegate.ModelDelegate;
import com.viaoa.docbuilder.model.*;
import com.viaoa.docbuilder.model.oa.*;
import com.viaoa.docbuilder.model.search.*;
import com.viaoa.docbuilder.model.oa.propertypath.*;
import com.viaoa.docbuilder.resource.Resource;
import com.viaoa.docbuilder.view.oa.*;
import com.viaoa.hub.*;
import com.viaoa.jfc.*;

public class ProjectsBarBase {
    private static Logger LOG = Logger.getLogger(ProjectsBarBase.class.getName());
    
    protected JPanel cardPanel;
    protected CardLayout cardLayout;
    protected OATree tree;
    
    public static final String CARD_Splash = "splash";
    public static final String CARD_ProjectInfos = "ProjectInfos";
    public static final String CARD_Tutorials = "Tutorials";
    
    public ProjectsBarBase() {
        cardLayout = new CardLayout();
        cardPanel = new JPanel(cardLayout);
        setup();
    }
    
    public JPanel getPanel() {
        return cardPanel;
    }
    
    protected void setup() {
        ImageIcon icon = Resource.getJarIcon("rootProjectsSplash.png");
        JLabel lbl = new JLabel("Projects", icon, JLabel.CENTER);
        lbl.setFont(lbl.getFont().deriveFont(20.0f));
        lbl.setVerticalTextPosition(SwingConstants.TOP);
        lbl.setHorizontalTextPosition(SwingConstants.CENTER);
        cardPanel.add(lbl, CARD_Splash);
        cardLayout.show(cardPanel, CARD_Splash);
    
        getTree();
        OATreeTitleNode ttNode;
    
        // ProjectInfos - Projects
        Hub<ProjectInfo> hubProjectInfo = ModelDelegate.getProjectInfos().createSharedHub();
        ProjectInfoJfc jfcProjectInfo = new ProjectInfoJfc(hubProjectInfo) {
            JPanel panx;
            @Override
            public void showCardPanel(final String name) {
                ProjectsBarBase.this.cardLayout.show(ProjectsBarBase.this.cardPanel, CARD_ProjectInfos);
                if (panx != null) {
                    super.showCardPanel(name);
                    return;
                }
                SwingWorker<Void, Void> sw = new SwingWorker<Void, Void>() {
                    volatile Exception ex;
                    @Override
                    protected Void doInBackground() throws Exception {
                        try {
                            panx = getCardPanel();
                        }
                        catch (Exception e) {
                            ex = e;
                        }
                        return null;
                    }
                    @Override
                    protected void done() {
                        if (ex != null) {
                            LOG.log(Level.WARNING, "UI exception creating ProjectInfoJfc", ex);
                            JOptionPane.showMessageDialog(null, "Exception while creating UI, message sent to tech support", "UI Exception", JOptionPane.ERROR_MESSAGE);
                        }
                        if (panx == null) panx = new JPanel();
                        ProjectsBarBase.this.cardPanel.add(panx, CARD_ProjectInfos);
                        showCardPanel(name);
                    }
                };
                sw.execute();
            }
        };
        jfcProjectInfo.getModel().setPluralDisplayName("Projects");
        jfcProjectInfo.getModel().setAllowAdd(false);
        jfcProjectInfo.getModel().setAllowRemove(false);
        jfcProjectInfo.getModel().setAllowSearch(false);
        jfcProjectInfo.getModel().setAllowHubSearch(true);
        jfcProjectInfo.getModel().setAllowNew(true);
        ttNode = jfcProjectInfo.getTreeTitleNode();
        tree.add(ttNode);
        ttNode.add(jfcProjectInfo.getTreeNode());
        cardPanel.add(new JLabel("loading Projects ...", Resource.getJarIcon("wait.png"), JLabel.CENTER), CARD_ProjectInfos);
    
        // Tutorials - Tutorials
        Hub<Tutorial> hubTutorial = ModelDelegate.getTutorials().createSharedHub();
        TutorialJfc jfcTutorial = new TutorialJfc(hubTutorial) {
            JPanel panx;
            @Override
            public void showCardPanel(final String name) {
                ProjectsBarBase.this.cardLayout.show(ProjectsBarBase.this.cardPanel, CARD_Tutorials);
                if (panx != null) {
                    super.showCardPanel(name);
                    return;
                }
                SwingWorker<Void, Void> sw = new SwingWorker<Void, Void>() {
                    volatile Exception ex;
                    @Override
                    protected Void doInBackground() throws Exception {
                        try {
                            panx = getCardPanel();
                        }
                        catch (Exception e) {
                            ex = e;
                        }
                        return null;
                    }
                    @Override
                    protected void done() {
                        if (ex != null) {
                            LOG.log(Level.WARNING, "UI exception creating TutorialJfc", ex);
                            JOptionPane.showMessageDialog(null, "Exception while creating UI, message sent to tech support", "UI Exception", JOptionPane.ERROR_MESSAGE);
                        }
                        if (panx == null) panx = new JPanel();
                        ProjectsBarBase.this.cardPanel.add(panx, CARD_Tutorials);
                        showCardPanel(name);
                    }
                };
                sw.execute();
            }
        };
        jfcTutorial.getModel().setPluralDisplayName("Tutorials");
        jfcTutorial.getModel().setAllowAdd(false);
        jfcTutorial.getModel().setAllowRemove(false);
        jfcTutorial.getModel().setAllowSearch(false);
        jfcTutorial.getModel().setAllowNew(true);
        ttNode = jfcTutorial.getTreeTitleNode();
        tree.add(ttNode);
        ttNode.add(jfcTutorial.getTreeNode());
        cardPanel.add(new JLabel("loading Tutorials ...", Resource.getJarIcon("wait.png"), JLabel.CENTER), CARD_Tutorials);
    }
    protected OATree getTree() {
        if (tree != null) return tree;
        tree = new OATree(18) {
            @Override
            public void nodeSelected(OATreeNode node) {
                super.nodeSelected(node);
                if (node == null) {
                    ProjectsBarBase.this.cardLayout.show(ProjectsBarBase.this.cardPanel, ProjectsBarBase.this.CARD_Splash);
                }
            }
        };
        tree.setAllowDnD(true);
        return tree;
    }
}

